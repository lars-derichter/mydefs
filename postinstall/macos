#!/usr/bin/env bash

# Make sure that everything is run from within the postinstall dir
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd $DIR

# Ask for the administrator password upfront.
sudo -v

# Keep-alive: update existing `sudo` time stamp until this script has finished.
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Make my preferred directories if they do not exist yet
mkdir -p "$HOME/Desktop/temp"
mkdir -p "$HOME/Documents/Administration"
mkdir -p "$HOME/Documents/Projects"
mkdir -p "$HOME/Documents/Websites"
mkdir -p "$HOME/Documents/Writing"

# Install XCode command line tools
xcode-select --install

# Install Homebrew etc
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
brew install mas

# Install all applications and tools from the Brewfile with brew bundle
brew bundle
brew cleanup

# Switch to using brew-installed bash as default shell
if ! fgrep -q '/usr/local/bin/bash' /etc/shells; then
  echo '/usr/local/bin/bash' | sudo tee -a /etc/shells;
  chsh -s /usr/local/bin/bash;
fi;

# Install and use node lts version
if [ -f $(brew --prefix)/opt/nvm/nvm.sh ]; then
  export NVM_DIR="$HOME/.nvm";

  # Make sure default-packages list will be found by nvm
  if [ -f ../.nvm/default-packages ]; then
    mkdir -p $HOME/.nvm && cp ../.nvm/default-packages $HOME/.nvm/;
  fi;

  . "$(brew --prefix)/opt/nvm/nvm.sh";
  nvm install --lts --latest-npm node;
  nvm alias default node;
fi

# Install and use latest stable Ruby
ruby-install ruby;
exec bash --login; # restart bash so that our new ruby can be found by chruby
if [ -f $(brew --prefix)/opt/chruby/share/chruby/chruby.sh ]; then
  source "$(brew --prefix)/opt/chruby/share/chruby/chruby.sh";
  chruby ruby;
  gem install bundler --no-document --clear-sources;
  bundle install;
  gem clean
fi

# Install and use latest stable Python
pyenv install 3.8.2;
pyenv global 3.8.2;
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)";
  eval "$(pyenv virtualenv-init -)";
fi
