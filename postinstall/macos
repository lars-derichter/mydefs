#!/usr/bin/env bash

# Ask for the administrator password upfront.
sudo -v

# Keep-alive: update existing `sudo` time stamp until this script has finished.
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Make my preferred directories if they do not exist yet
mkdir -p ~/Desktop/temp
mkdir -p ~/Documents/Administration
mkdir -p ~/Documents/Projects
mkdir -p ~/Documents/Websites
mkdir -p ~/Documents/Writing

# Install XCode command line tools
xcode-select --install

# Install Homebrew etc
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
brew install mas

# Install all applications and tools from the Brewfile with brew bundle
brew bundle
brew cleanup

# Switch to using brew-installed bash as default shell
if ! fgrep -q '/usr/local/bin/bash' /etc/shells; then
  echo '/usr/local/bin/bash' | sudo tee -a /etc/shells;
  chsh -s /usr/local/bin/bash;
fi;

# Install and use node lts version
if [ -f $(brew --prefix)/opt/nvm/nvm.sh ]; then
  export NVM_DIR="$HOME/.nvm";
  . "/usr/local/opt/nvm/nvm.sh";
  nvm install --lts --latest-npm node;
  nvm alias default node;
fi
npm cache clean --force

# Install and use latest stable Ruby
ruby-install ruby;
if [ -f $(brew --prefix)/opt/chruby/share/chruby/chruby.sh ]; then
  source "$(brew --prefix)/opt/chruby/share/chruby/chruby.sh";
  chruby ruby;
  gem install bundler --no-document --clear-sources;
  bundle install;
  gem clean
fi

# Install atom packages from Apmfile
#apm install --packages-file Apmfile
#apm clean
